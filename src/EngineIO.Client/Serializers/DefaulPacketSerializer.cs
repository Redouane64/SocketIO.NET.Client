using System.Text;namespace EngineIO.Client.Serializers;public sealed class DefaulPacketSerializer : IPacketSerializer<Packet>{    public Packet Deserialize(ReadOnlySpan<byte> data)    {        var type = Encoding.UTF8.GetString(data[..1]);        var message = Encoding.UTF8.GetString(data[1..]);        return new Packet(type, message);    }    public byte[] Serialize(string type, string? data)    {        var packetBuilder = new StringBuilder();        packetBuilder.Append(type);        if (data is not null)        {            packetBuilder.Append(data);        }        return Encoding.UTF8.GetBytes(packetBuilder.ToString());    }}